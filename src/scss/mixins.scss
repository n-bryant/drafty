/*  Media
 *  ─────────────────────────────────── */
// Small devices
@mixin sm {
  @media (min-width: #{$screen-sm-min}) {
    @content;
  }
}

// Medium devices
@mixin md {
  @media (min-width: #{$screen-md-min}) {
    @content;
  }
}

// Large devices
@mixin lg {
  @media (min-width: #{$screen-lg-min}) {
    @content;
  }
}

// Extra large devices
@mixin xl {
  @media (min-width: #{$screen-xl-min}) {
    @content;
  }
}

// Custom devices
@mixin rwd($screen) {
  @media (min-width: $screen+"px") {
    @content;
  }
}

/*  Layout
 *  ─────────────────────────────────── */
@mixin absoluteContainer {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

@mixin flexCenter($direction) {
  display: flex;
  flex-direction: $direction;
  justify-content: center;
  align-items: center;
}

/*  Transitions
 *  ─────────────────────────────────── */
@mixin colorShift {
  transition: color 0.25s ease;
}

@mixin fillShift {
  transition: fill 0.25s ease;
}

@mixin transitionAll {
  transition: all 0.25s ease;
}

@mixin fade($duration) {
  .fade-enter-active,
  .fade-leave-active {
    transition: opacity $duration;
  }
  .fade-enter, .fade-leave-to /* .fade-leave-active below version 2.1.8 */ {
    opacity: 0;
  }
}

@mixin slideIn {
  .slide-in {
    &-move {
      transition: opacity 0.5s linear, transform 0.5s ease-in-out;
    }

    &-leave-active {
      transition: opacity 0.4s linear,
        transform 0.4s cubic-bezier(0.5, 0, 0.7, 0.4); //cubic-bezier(.7,0,.7,1);
      transition-delay: calc(0.1s * (var(--total) - var(--i)));
    }

    &-enter-active {
      transition: opacity 0.5s linear,
        transform 0.5s cubic-bezier(0.2, 0.5, 0.1, 1);
      transition-delay: calc(0.1s * var(--i));
    }

    &-enter,
    &-leave-to {
      opacity: 0;
    }

    &-enter {
      transform: translateY(1em);
    }
    &-leave-to {
      transform: translateY(-1em);
    }
  }
}

@mixin float {
  animation: float 6s ease-in-out infinite;

  @keyframes float {
    0% {
      box-shadow: 0 5px 15px 0px rgba(0, 0, 0, 0.6);
      transform: translatey(0px);
    }
    50% {
      box-shadow: 0 25px 15px 0px rgba(0, 0, 0, 0.2);
      transform: translatey(-$spacing-4);
    }
    100% {
      box-shadow: 0 5px 15px 0px rgba(0, 0, 0, 0.6);
      transform: translatey(0px);
    }
  }
}

@mixin fan($count, $angle) {
  @for $i from 1 through $count {
    div:nth-child(#{$i}) {
      transform: translate(-50%, -50%)
        rotate(-$angle / 2 + $angle / ($count + 1) * $i);
    }
  }
}
